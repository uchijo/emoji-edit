import Head from "next/head";
import { Inter } from "next/font/google";
import {
  Box,
  Button,
  Card,
  Container,
  Flex,
  Group,
  Text,
  Title,
} from "@mantine/core";
import { useFavoriteEmojis } from "@/utils/use/useFavoriteEmojis";
import { EmojiDisplay } from "@/components/emojiDisplay";
import { Emoji } from "@/model/emoji/emoji";
import { GridModel } from "@/model/grid/grid";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const { error, data, isLoading } = useFavoriteEmojis();
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Container>
          <Title order={2}>絵文字コネコネ</Title>
          <Text>
            グリッド上で絵文字をポチポチして投稿を作成できるツールです。
            <br />
            現状では縦:横が1:1の絵文字にのみ対応しており、それ以外を使うとバグります。
            <br />
            NIP-07にリレーと秘密鍵が登録してある状態でのみ使用可能です。
          </Text>
          <Card my="lg" shadow="sm" padding="lg" radius="md" withBorder>
            <Title order={3}>編集</Title>
            <Box
              style={{
                display: "flex",
              }}
            >
              <Button
                onClick={() => {
                  const emoji1 = new Emoji("shortcode1", "example.com/1");
                  const emoji2 = new Emoji("shortcode2", "example.com/2");
                  const emoji3 = new Emoji("shortcode3", "example.com/3");
                  const grid = new GridModel(2, 3);
                  grid.setAt(0, 0, emoji1);
                  grid.setAt(1, 0, emoji2);
                  grid.setAt(0, 1, emoji3);
                  grid.addColumn(0);
                  grid.addRow(0);
                  console.dir(grid);
                }}
              >
                hogehoge
              </Button>
            </Box>
          </Card>
          <Card my="lg" shadow="sm" padding="lg" radius="md" withBorder>
            <Title order={3}>プレビュー</Title>
            hoge
          </Card>
          {data == undefined ? (
            error !== undefined ? (
              <Text>エラー発生！</Text>
            ) : (
              <Text>読込中</Text>
            )
          ) : (
            <>
              {data!.map((list) => (
                <Card
                  my="lg"
                  shadow="sm"
                  padding="lg"
                  radius="md"
                  withBorder
                  key={`${list.title}${list.author}`}
                >
                  <Title order={5}>{list.title ?? list.identifier}</Title>
                  <Group mt="sm">
                    {list.emojiList.map((elem) => (
                      <EmojiDisplay
                        emoji={elem}
                        key={`${elem.url}${elem.shortcode}`}
                        onClick={() => console.log(elem.shortcode)}
                      />
                    ))}
                  </Group>
                </Card>
              ))}
            </>
          )}
        </Container>
      </main>
    </>
  );
}
